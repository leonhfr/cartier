service: cartier

frameworkVersion: '>=1.0.0 <2.0.0'

custom:
  account: ${opt:account}
  region: ${opt:region}
  flickrkey: ${opt:flickrkey}
  flickrlimit: ${opt:flickrlimit}
  timeout: ${opt:timeout}
  rate: ${opt:rate}
  debug: ${opt:debug}
  prune:
    automatic: true
    number: 3
provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  timeout: ${self:custom.timeout}
  memorySize: 512
  logRetentionInDays: 7
  environment:
    ACCOUNT: ${self:custom.account}
    REGION: ${self:custom.region}
    FLICKRKEY: ${self:custom.flickrkey}
    FLICKRLIMIT: ${self:custom.flickrlimit}
    TIMEOUT: ${self:custom.timeout}
    RATE: ${self:custom.rate}
    DEBUG: ${self:custom.debug}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'lambda:*'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 'dynamodb:*'
      Resource: '*'
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource:
        - arn:aws:s3:::scenicroutes-*
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource: arn:aws:sqs:${self:custom.region}:*:*
functions:
  scheduler:
    handler: build/scheduler.main
    events:
      - schedule:
          name: scheduler-event
          description: 'Event to fire the scheduler service'
          rate: rate(${self:custom.rate} minutes)
  consumer:
    handler: build/consumer.main
    reservedConcurrency: 1
    events:
      - sqs:
          arn: arn:aws:sqs:${self:custom.region}:${self:custom.account}:job-scheduling
          batchSize: 4

resources:
  - ${file(config/sqs-job.json)}

plugins:
  - serverless-prune-plugin

package:
  exclude:
    - src/**
    - config/**
    - coverage/**
    - docs/**
    - build/**/*.d.ts
    - build/**/*.test.js
    - build/scripts/**
